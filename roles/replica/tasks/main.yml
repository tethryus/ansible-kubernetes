---

- name: Kubernetes - control-plane - ensure kube directory
  ansible.builtin.file:
    path: "~{{ ansible_facts.user_id }}/.kube/"
    state: directory
    mode: 0755

- name: Kubernetes - Node - retrieve join command
  ansible.builtin.set_fact:
    join_command: "{{ hostvars[groups['primary_control_plane'][0]]['certificate_key'] }}"
    certificate_key: "{{ hostvars[groups['primary_control_plane'][0]]['certificate_key'] }}"
  changed_when: false

- name: Kubernetes - control-plane - check setup log existence
  ansible.builtin.stat:
    path: "~{{ ansible_facts.user_id }}/.kube/setup.log"
  register: setup_log_stat

- name: Kubernetes - control-plane - set initialized flag
  ansible.builtin.set_fact:
    initialized: "{{ setup_log_stat.stat.exists }}"

- name: Kubernetes - Node - join
  when: not initialized
  ansible.builtin.shell: >-
   {{ join_command + " " +
   ("--control-plane --certificate-key " + certificate_key
   if inventory_hostname in groups["replica_control_plane"] else "") }} > ~/.kube/setup.log
  become: true
  register: join_stdout

- name: Kubernetes - control-plane - set initialized flag
  ansible.builtin.set_fact:
    initialized: true
  when: join_stdout is not undefined
